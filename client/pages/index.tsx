import { useUsersQuery } from 'graphql/generated'
import type { NextPage } from 'next'
import Head from 'next/head'
import { useRouter } from 'next/router'
import { MouseEvent, useEffect, useRef } from 'react'
import styles from 'styles/Home.module.css'

const Home: NextPage = () => {
  const router = useRouter()
  const paginationRef = useRef(Number(router.query?.page))
  const itemsPerPage = Number(process.env.NEXT_PUBLIC_ITEMS_PER_PAGE)

  const { data, loading, fetchMore } = useUsersQuery({
    variables: {
      limit: !paginationRef.current
        ? itemsPerPage
        : paginationRef.current * itemsPerPage,
      offset: 0,
    },
  })

  const hasNextPage =
    Number(data?.users_aggregate.aggregate?.count) > Number(data?.users.length)

  function handleFetchMore(event: MouseEvent<HTMLButtonElement>) {
    event.preventDefault()
    paginationRef.current += 1
    router.push(`/?page=${paginationRef.current}`, undefined, { shallow: true })
    fetchMore({
      variables: {
        offset: data?.users?.length,
      },
    })
  }

  useEffect(() => {
    if (!paginationRef.current) {
      router.push(`/?page=1`, undefined, { shallow: true })
      paginationRef.current = 1
    }
  }, [router])

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{' '}
          <code className={styles.code}>pages/index.tsx</code>
        </p>

        <div className={styles.grid}>
          {data?.users.map((user) => (
            <div key={user.id} className={styles.card}>
              <h2>{user.name}</h2>
              <p>{user.description}</p>
            </div>
          ))}
        </div>

        <button
          type="button"
          onClick={handleFetchMore}
          disabled={!hasNextPage || loading}
        >
          {hasNextPage ? 'Load more' : 'No more users'}
        </button>
      </main>
    </div>
  )
}

export default Home
